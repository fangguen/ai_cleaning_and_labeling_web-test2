# Generated by Django 5.1.2 on 2024-10-27 11:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=20)),
                ('api_key', models.CharField(max_length=255)),
                ('system_prompt', models.TextField(blank=True, null=True)),
                ('base_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_config',
                'indexes': [models.Index(fields=['service_type'], name='api_config_service_f56f04_idx'), models.Index(fields=['created_at'], name='api_config_created_e13e25_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(default='default', max_length=100)),
                ('status', models.CharField(choices=[('pending', '处理中'), ('success', '成功'), ('failed', '失败')], default='pending', max_length=20)),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['timestamp'],
                'indexes': [models.Index(fields=['session_id', 'timestamp'], name='chat_messag_session_4a3fea_idx'), models.Index(fields=['status'], name='chat_messag_status_d794a2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProcessingDimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cleaning', '数据清洗'), ('labeling', '数据标注')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'processing_dimensions',
                'ordering': ['type', 'order', 'name'],
                'indexes': [models.Index(fields=['type'], name='processing__type_8f6065_idx'), models.Index(fields=['is_default'], name='processing__is_defa_f4dbd5_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cleaning', '数据清洗'), ('labeling', '数据标注'), ('chat', '聊天对话')], max_length=20)),
                ('content', models.TextField()),
                ('json_schema', models.TextField(blank=True, help_text='JSON格式范例', null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'system_prompts',
                'indexes': [models.Index(fields=['type'], name='system_prom_type_39d5a8_idx'), models.Index(fields=['is_default'], name='system_prom_is_defa_325320_idx')],
            },
        ),
    ]
